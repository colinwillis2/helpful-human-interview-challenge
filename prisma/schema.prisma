generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model hex_colors {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String? @unique
  hex_code String? @unique
  slug     String? @unique
}

model color_group_assignments {
  color_id     String       @db.Uuid
  group_id     String       @db.Uuid
  colors       colors       @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  color_groups color_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([color_id, group_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model color_groups {
  id                      String                    @id(map: "color_group_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                    String                    @unique(map: "color_group_name_key")
  color_group_assignments color_group_assignments[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model colors {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                    String                    @unique
  hex_code                String                    @unique
  rgb_code                String                    @unique
  slug                    String?
  color_group_assignments color_group_assignments[]
}
